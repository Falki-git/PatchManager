//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/arall/PatchManager/src/PatchManager.SassyPatching/SassyPatchGrammar\sassy_lexer.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SassyPatchGrammar {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class sassy_lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMENT=1, SPACE=2, USE=3, FUNCTION=4, PRE_IF=5, PRE_ELSE=6, PRE_ELSE_IF=7, 
		MIXIN=8, WHILE=9, FOR=10, FROM=11, THROUGH=12, TO=13, EACH=14, IN=15, 
		SET=16, MERGE=17, REQUIRE=18, REQUIRE_NOT=19, STAGE=20, DEFINE_STAGE=21, 
		INCLUDE=22, RETURN=23, LEFT_BRACE=24, RIGHT_BRACE=25, LEFT_PAREN=26, RIGHT_PAREN=27, 
		LEFT_BRACKET=28, RIGHT_BRACKET=29, SEMICOLON=30, COLON=31, COMMA=32, ADD=33, 
		SUBTRACT=34, MULTIPLY=35, DIVIDE=36, MODULUS=37, NOT=38, GREATER_THAN=39, 
		GREATER_THAN_EQUAL=40, LESSER_THAN=41, LESSER_THAN_EQUAL=42, EQUAL_TO=43, 
		NOT_EQUAL_TO=44, AND=45, OR=46, IF=47, ELSE=48, WITHOUT=49, NONE=50, TRUE=51, 
		FALSE=52, HEX_NUMBER=53, NUMBER=54, STRING=55, DELETE=56, NAME=57, CLASS=58, 
		VARIABLE=59, RULESET=60, ELEMENT=61;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COMMENT", "MULTILINE_COMMENT", "LINE_COMMENT", "SPACE", "USE", "FUNCTION", 
		"PRE_IF", "PRE_ELSE", "PRE_ELSE_IF", "MIXIN", "WHILE", "FOR", "FROM", 
		"THROUGH", "TO", "EACH", "IN", "SET", "MERGE", "REQUIRE", "REQUIRE_NOT", 
		"STAGE", "DEFINE_STAGE", "INCLUDE", "RETURN", "LEFT_BRACE", "RIGHT_BRACE", 
		"LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACKET", "RIGHT_BRACKET", "SEMICOLON", 
		"COLON", "COMMA", "ADD", "SUBTRACT", "MULTIPLY", "DIVIDE", "MODULUS", 
		"NOT", "GREATER_THAN", "GREATER_THAN_EQUAL", "LESSER_THAN", "LESSER_THAN_EQUAL", 
		"EQUAL_TO", "NOT_EQUAL_TO", "AND", "OR", "IF", "ELSE", "WITHOUT", "NONE", 
		"TRUE", "FALSE", "HEX_NUMBER", "NUMBER", "STRING", "DELETE", "SHORT_NUMBER", 
		"LONG_NUMBER", "DIGIT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC", 
		"IDENTIFIER", "WILDCARDLESS_IDENTIFIER", "NAME", "CLASS", "VARIABLE", 
		"RULESET", "ELEMENT"
	};


	public sassy_lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public sassy_lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'@use'", "'@function'", "'@if'", "'@else'", "'@else-if'", 
		"'@mixin'", "'@while'", "'@for'", "'from'", "'through'", "'to'", "'@each'", 
		"'in'", "'@set'", "'@merge'", "'@require'", "'@require-not'", "'@stage'", 
		"'@define-stage'", "'@include'", "'@return'", "'{'", "'}'", "'('", "')'", 
		"'['", "']'", "';'", "':'", "','", "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'!'", "'>'", "'>='", "'<'", "'<='", "'=='", "'!='", "'and'", "'or'", 
		"'if'", "'else'", "'~'", "'null'", "'true'", "'false'", null, null, null, 
		"'@delete'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMENT", "SPACE", "USE", "FUNCTION", "PRE_IF", "PRE_ELSE", "PRE_ELSE_IF", 
		"MIXIN", "WHILE", "FOR", "FROM", "THROUGH", "TO", "EACH", "IN", "SET", 
		"MERGE", "REQUIRE", "REQUIRE_NOT", "STAGE", "DEFINE_STAGE", "INCLUDE", 
		"RETURN", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACKET", 
		"RIGHT_BRACKET", "SEMICOLON", "COLON", "COMMA", "ADD", "SUBTRACT", "MULTIPLY", 
		"DIVIDE", "MODULUS", "NOT", "GREATER_THAN", "GREATER_THAN_EQUAL", "LESSER_THAN", 
		"LESSER_THAN_EQUAL", "EQUAL_TO", "NOT_EQUAL_TO", "AND", "OR", "IF", "ELSE", 
		"WITHOUT", "NONE", "TRUE", "FALSE", "HEX_NUMBER", "NUMBER", "STRING", 
		"DELETE", "NAME", "CLASS", "VARIABLE", "RULESET", "ELEMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "sassy_lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static sassy_lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,61,547,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,1,0,1,0,3,0,148,8,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,156,8,1,
		10,1,12,1,159,9,1,1,1,4,1,162,8,1,11,1,12,1,163,1,1,1,1,5,1,168,8,1,10,
		1,12,1,171,9,1,1,1,4,1,174,8,1,11,1,12,1,175,5,1,178,8,1,10,1,12,1,181,
		9,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,189,8,2,10,2,12,2,192,9,2,1,3,4,3,195,
		8,3,11,3,12,3,196,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,
		1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
		8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
		1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
		1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
		1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
		1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,
		1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,
		1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,
		1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,
		1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
		1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,
		1,53,1,53,1,54,1,54,1,54,1,54,4,54,434,8,54,11,54,12,54,435,1,55,4,55,
		439,8,55,11,55,12,55,440,1,55,1,55,3,55,445,8,55,1,56,1,56,1,56,5,56,450,
		8,56,10,56,12,56,453,9,56,1,56,1,56,1,56,1,56,5,56,459,8,56,10,56,12,56,
		462,9,56,1,56,3,56,465,8,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,
		58,1,58,4,58,477,8,58,11,58,12,58,478,1,59,4,59,482,8,59,11,59,12,59,483,
		1,59,1,59,4,59,488,8,59,11,59,12,59,489,1,60,1,60,1,61,1,61,1,62,1,62,
		1,62,1,62,3,62,500,8,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,3,
		63,511,8,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,5,65,522,8,65,
		10,65,12,65,525,9,65,1,66,1,66,5,66,529,8,66,10,66,12,66,532,9,66,1,67,
		1,67,1,67,1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,0,0,72,
		1,1,3,0,5,0,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,
		13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,
		25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,77,
		37,79,38,81,39,83,40,85,41,87,42,89,43,91,44,93,45,95,46,97,47,99,48,101,
		49,103,50,105,51,107,52,109,53,111,54,113,55,115,56,117,0,119,0,121,0,
		123,0,125,0,127,0,129,0,131,0,133,0,135,57,137,58,139,59,141,60,143,61,
		1,0,13,1,0,42,42,2,0,42,42,47,47,2,0,10,10,13,13,3,0,9,10,12,13,32,32,
		2,0,34,34,92,92,2,0,39,39,92,92,1,0,48,57,3,0,48,57,65,70,97,102,8,0,34,
		34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,5,0,42,42,63,63,65,
		90,95,95,97,122,7,0,42,42,45,46,48,57,63,63,65,90,95,95,97,122,3,0,65,
		90,95,95,97,122,5,0,45,46,48,57,65,90,95,95,97,122,561,0,1,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
		0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,
		0,0,0,1,147,1,0,0,0,3,151,1,0,0,0,5,184,1,0,0,0,7,194,1,0,0,0,9,200,1,
		0,0,0,11,205,1,0,0,0,13,215,1,0,0,0,15,219,1,0,0,0,17,225,1,0,0,0,19,234,
		1,0,0,0,21,241,1,0,0,0,23,248,1,0,0,0,25,253,1,0,0,0,27,258,1,0,0,0,29,
		266,1,0,0,0,31,269,1,0,0,0,33,275,1,0,0,0,35,278,1,0,0,0,37,283,1,0,0,
		0,39,290,1,0,0,0,41,299,1,0,0,0,43,312,1,0,0,0,45,319,1,0,0,0,47,333,1,
		0,0,0,49,342,1,0,0,0,51,350,1,0,0,0,53,352,1,0,0,0,55,354,1,0,0,0,57,356,
		1,0,0,0,59,358,1,0,0,0,61,360,1,0,0,0,63,362,1,0,0,0,65,364,1,0,0,0,67,
		366,1,0,0,0,69,368,1,0,0,0,71,370,1,0,0,0,73,372,1,0,0,0,75,374,1,0,0,
		0,77,376,1,0,0,0,79,378,1,0,0,0,81,380,1,0,0,0,83,382,1,0,0,0,85,385,1,
		0,0,0,87,387,1,0,0,0,89,390,1,0,0,0,91,393,1,0,0,0,93,396,1,0,0,0,95,400,
		1,0,0,0,97,403,1,0,0,0,99,406,1,0,0,0,101,411,1,0,0,0,103,413,1,0,0,0,
		105,418,1,0,0,0,107,423,1,0,0,0,109,429,1,0,0,0,111,444,1,0,0,0,113,464,
		1,0,0,0,115,466,1,0,0,0,117,474,1,0,0,0,119,481,1,0,0,0,121,491,1,0,0,
		0,123,493,1,0,0,0,125,499,1,0,0,0,127,510,1,0,0,0,129,512,1,0,0,0,131,
		519,1,0,0,0,133,526,1,0,0,0,135,533,1,0,0,0,137,536,1,0,0,0,139,539,1,
		0,0,0,141,542,1,0,0,0,143,545,1,0,0,0,145,148,3,5,2,0,146,148,3,3,1,0,
		147,145,1,0,0,0,147,146,1,0,0,0,148,149,1,0,0,0,149,150,6,0,0,0,150,2,
		1,0,0,0,151,152,5,47,0,0,152,153,5,42,0,0,153,157,1,0,0,0,154,156,8,0,
		0,0,155,154,1,0,0,0,156,159,1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,
		161,1,0,0,0,159,157,1,0,0,0,160,162,5,42,0,0,161,160,1,0,0,0,162,163,1,
		0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,179,1,0,0,0,165,169,8,1,0,0,
		166,168,8,0,0,0,167,166,1,0,0,0,168,171,1,0,0,0,169,167,1,0,0,0,169,170,
		1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,0,172,174,5,42,0,0,173,172,1,0,0,
		0,174,175,1,0,0,0,175,173,1,0,0,0,175,176,1,0,0,0,176,178,1,0,0,0,177,
		165,1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,182,1,
		0,0,0,181,179,1,0,0,0,182,183,5,47,0,0,183,4,1,0,0,0,184,185,5,47,0,0,
		185,186,5,47,0,0,186,190,1,0,0,0,187,189,8,2,0,0,188,187,1,0,0,0,189,192,
		1,0,0,0,190,188,1,0,0,0,190,191,1,0,0,0,191,6,1,0,0,0,192,190,1,0,0,0,
		193,195,7,3,0,0,194,193,1,0,0,0,195,196,1,0,0,0,196,194,1,0,0,0,196,197,
		1,0,0,0,197,198,1,0,0,0,198,199,6,3,0,0,199,8,1,0,0,0,200,201,5,64,0,0,
		201,202,5,117,0,0,202,203,5,115,0,0,203,204,5,101,0,0,204,10,1,0,0,0,205,
		206,5,64,0,0,206,207,5,102,0,0,207,208,5,117,0,0,208,209,5,110,0,0,209,
		210,5,99,0,0,210,211,5,116,0,0,211,212,5,105,0,0,212,213,5,111,0,0,213,
		214,5,110,0,0,214,12,1,0,0,0,215,216,5,64,0,0,216,217,5,105,0,0,217,218,
		5,102,0,0,218,14,1,0,0,0,219,220,5,64,0,0,220,221,5,101,0,0,221,222,5,
		108,0,0,222,223,5,115,0,0,223,224,5,101,0,0,224,16,1,0,0,0,225,226,5,64,
		0,0,226,227,5,101,0,0,227,228,5,108,0,0,228,229,5,115,0,0,229,230,5,101,
		0,0,230,231,5,45,0,0,231,232,5,105,0,0,232,233,5,102,0,0,233,18,1,0,0,
		0,234,235,5,64,0,0,235,236,5,109,0,0,236,237,5,105,0,0,237,238,5,120,0,
		0,238,239,5,105,0,0,239,240,5,110,0,0,240,20,1,0,0,0,241,242,5,64,0,0,
		242,243,5,119,0,0,243,244,5,104,0,0,244,245,5,105,0,0,245,246,5,108,0,
		0,246,247,5,101,0,0,247,22,1,0,0,0,248,249,5,64,0,0,249,250,5,102,0,0,
		250,251,5,111,0,0,251,252,5,114,0,0,252,24,1,0,0,0,253,254,5,102,0,0,254,
		255,5,114,0,0,255,256,5,111,0,0,256,257,5,109,0,0,257,26,1,0,0,0,258,259,
		5,116,0,0,259,260,5,104,0,0,260,261,5,114,0,0,261,262,5,111,0,0,262,263,
		5,117,0,0,263,264,5,103,0,0,264,265,5,104,0,0,265,28,1,0,0,0,266,267,5,
		116,0,0,267,268,5,111,0,0,268,30,1,0,0,0,269,270,5,64,0,0,270,271,5,101,
		0,0,271,272,5,97,0,0,272,273,5,99,0,0,273,274,5,104,0,0,274,32,1,0,0,0,
		275,276,5,105,0,0,276,277,5,110,0,0,277,34,1,0,0,0,278,279,5,64,0,0,279,
		280,5,115,0,0,280,281,5,101,0,0,281,282,5,116,0,0,282,36,1,0,0,0,283,284,
		5,64,0,0,284,285,5,109,0,0,285,286,5,101,0,0,286,287,5,114,0,0,287,288,
		5,103,0,0,288,289,5,101,0,0,289,38,1,0,0,0,290,291,5,64,0,0,291,292,5,
		114,0,0,292,293,5,101,0,0,293,294,5,113,0,0,294,295,5,117,0,0,295,296,
		5,105,0,0,296,297,5,114,0,0,297,298,5,101,0,0,298,40,1,0,0,0,299,300,5,
		64,0,0,300,301,5,114,0,0,301,302,5,101,0,0,302,303,5,113,0,0,303,304,5,
		117,0,0,304,305,5,105,0,0,305,306,5,114,0,0,306,307,5,101,0,0,307,308,
		5,45,0,0,308,309,5,110,0,0,309,310,5,111,0,0,310,311,5,116,0,0,311,42,
		1,0,0,0,312,313,5,64,0,0,313,314,5,115,0,0,314,315,5,116,0,0,315,316,5,
		97,0,0,316,317,5,103,0,0,317,318,5,101,0,0,318,44,1,0,0,0,319,320,5,64,
		0,0,320,321,5,100,0,0,321,322,5,101,0,0,322,323,5,102,0,0,323,324,5,105,
		0,0,324,325,5,110,0,0,325,326,5,101,0,0,326,327,5,45,0,0,327,328,5,115,
		0,0,328,329,5,116,0,0,329,330,5,97,0,0,330,331,5,103,0,0,331,332,5,101,
		0,0,332,46,1,0,0,0,333,334,5,64,0,0,334,335,5,105,0,0,335,336,5,110,0,
		0,336,337,5,99,0,0,337,338,5,108,0,0,338,339,5,117,0,0,339,340,5,100,0,
		0,340,341,5,101,0,0,341,48,1,0,0,0,342,343,5,64,0,0,343,344,5,114,0,0,
		344,345,5,101,0,0,345,346,5,116,0,0,346,347,5,117,0,0,347,348,5,114,0,
		0,348,349,5,110,0,0,349,50,1,0,0,0,350,351,5,123,0,0,351,52,1,0,0,0,352,
		353,5,125,0,0,353,54,1,0,0,0,354,355,5,40,0,0,355,56,1,0,0,0,356,357,5,
		41,0,0,357,58,1,0,0,0,358,359,5,91,0,0,359,60,1,0,0,0,360,361,5,93,0,0,
		361,62,1,0,0,0,362,363,5,59,0,0,363,64,1,0,0,0,364,365,5,58,0,0,365,66,
		1,0,0,0,366,367,5,44,0,0,367,68,1,0,0,0,368,369,5,43,0,0,369,70,1,0,0,
		0,370,371,5,45,0,0,371,72,1,0,0,0,372,373,5,42,0,0,373,74,1,0,0,0,374,
		375,5,47,0,0,375,76,1,0,0,0,376,377,5,37,0,0,377,78,1,0,0,0,378,379,5,
		33,0,0,379,80,1,0,0,0,380,381,5,62,0,0,381,82,1,0,0,0,382,383,5,62,0,0,
		383,384,5,61,0,0,384,84,1,0,0,0,385,386,5,60,0,0,386,86,1,0,0,0,387,388,
		5,60,0,0,388,389,5,61,0,0,389,88,1,0,0,0,390,391,5,61,0,0,391,392,5,61,
		0,0,392,90,1,0,0,0,393,394,5,33,0,0,394,395,5,61,0,0,395,92,1,0,0,0,396,
		397,5,97,0,0,397,398,5,110,0,0,398,399,5,100,0,0,399,94,1,0,0,0,400,401,
		5,111,0,0,401,402,5,114,0,0,402,96,1,0,0,0,403,404,5,105,0,0,404,405,5,
		102,0,0,405,98,1,0,0,0,406,407,5,101,0,0,407,408,5,108,0,0,408,409,5,115,
		0,0,409,410,5,101,0,0,410,100,1,0,0,0,411,412,5,126,0,0,412,102,1,0,0,
		0,413,414,5,110,0,0,414,415,5,117,0,0,415,416,5,108,0,0,416,417,5,108,
		0,0,417,104,1,0,0,0,418,419,5,116,0,0,419,420,5,114,0,0,420,421,5,117,
		0,0,421,422,5,101,0,0,422,106,1,0,0,0,423,424,5,102,0,0,424,425,5,97,0,
		0,425,426,5,108,0,0,426,427,5,115,0,0,427,428,5,101,0,0,428,108,1,0,0,
		0,429,430,5,48,0,0,430,431,5,120,0,0,431,433,1,0,0,0,432,434,3,123,61,
		0,433,432,1,0,0,0,434,435,1,0,0,0,435,433,1,0,0,0,435,436,1,0,0,0,436,
		110,1,0,0,0,437,439,3,121,60,0,438,437,1,0,0,0,439,440,1,0,0,0,440,438,
		1,0,0,0,440,441,1,0,0,0,441,445,1,0,0,0,442,445,3,117,58,0,443,445,3,119,
		59,0,444,438,1,0,0,0,444,442,1,0,0,0,444,443,1,0,0,0,445,112,1,0,0,0,446,
		451,5,34,0,0,447,450,3,125,62,0,448,450,8,4,0,0,449,447,1,0,0,0,449,448,
		1,0,0,0,450,453,1,0,0,0,451,449,1,0,0,0,451,452,1,0,0,0,452,454,1,0,0,
		0,453,451,1,0,0,0,454,465,5,34,0,0,455,460,5,39,0,0,456,459,3,125,62,0,
		457,459,8,5,0,0,458,456,1,0,0,0,458,457,1,0,0,0,459,462,1,0,0,0,460,458,
		1,0,0,0,460,461,1,0,0,0,461,463,1,0,0,0,462,460,1,0,0,0,463,465,5,39,0,
		0,464,446,1,0,0,0,464,455,1,0,0,0,465,114,1,0,0,0,466,467,5,64,0,0,467,
		468,5,100,0,0,468,469,5,101,0,0,469,470,5,108,0,0,470,471,5,101,0,0,471,
		472,5,116,0,0,472,473,5,101,0,0,473,116,1,0,0,0,474,476,5,46,0,0,475,477,
		3,121,60,0,476,475,1,0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,
		0,0,479,118,1,0,0,0,480,482,3,121,60,0,481,480,1,0,0,0,482,483,1,0,0,0,
		483,481,1,0,0,0,483,484,1,0,0,0,484,485,1,0,0,0,485,487,5,46,0,0,486,488,
		3,121,60,0,487,486,1,0,0,0,488,489,1,0,0,0,489,487,1,0,0,0,489,490,1,0,
		0,0,490,120,1,0,0,0,491,492,7,6,0,0,492,122,1,0,0,0,493,494,7,7,0,0,494,
		124,1,0,0,0,495,496,5,92,0,0,496,500,7,8,0,0,497,500,3,129,64,0,498,500,
		3,127,63,0,499,495,1,0,0,0,499,497,1,0,0,0,499,498,1,0,0,0,500,126,1,0,
		0,0,501,502,5,92,0,0,502,503,2,48,51,0,503,504,2,48,55,0,504,511,2,48,
		55,0,505,506,5,92,0,0,506,507,2,48,55,0,507,511,2,48,55,0,508,509,5,92,
		0,0,509,511,2,48,55,0,510,501,1,0,0,0,510,505,1,0,0,0,510,508,1,0,0,0,
		511,128,1,0,0,0,512,513,5,92,0,0,513,514,5,117,0,0,514,515,3,123,61,0,
		515,516,3,123,61,0,516,517,3,123,61,0,517,518,3,123,61,0,518,130,1,0,0,
		0,519,523,7,9,0,0,520,522,7,10,0,0,521,520,1,0,0,0,522,525,1,0,0,0,523,
		521,1,0,0,0,523,524,1,0,0,0,524,132,1,0,0,0,525,523,1,0,0,0,526,530,7,
		11,0,0,527,529,7,12,0,0,528,527,1,0,0,0,529,532,1,0,0,0,530,528,1,0,0,
		0,530,531,1,0,0,0,531,134,1,0,0,0,532,530,1,0,0,0,533,534,5,35,0,0,534,
		535,3,131,65,0,535,136,1,0,0,0,536,537,5,46,0,0,537,538,3,133,66,0,538,
		138,1,0,0,0,539,540,5,36,0,0,540,541,3,133,66,0,541,140,1,0,0,0,542,543,
		5,58,0,0,543,544,3,133,66,0,544,142,1,0,0,0,545,546,3,133,66,0,546,144,
		1,0,0,0,24,0,147,157,163,169,175,179,190,196,435,440,444,449,451,458,460,
		464,478,483,489,499,510,523,530,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SassyPatchGrammar
